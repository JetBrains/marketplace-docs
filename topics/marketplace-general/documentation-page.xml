<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Documentation_Page" title="Documentation Page">
    <p>If your plugin needs not only a landing page with a features' overview but user-facing documentation,
        the <b>Documentation</b> page is coming into play.
    </p>
    <p>Unlike <a href="custom-pages.xml">Custom pages</a>, the <b>Documentation</b> page is designed to host
        documentation
        in a separate tab.
    </p>
    <p>This is not a single page but a full-fledged help instance with a structure, a table of contents, and in-topic
        navigation.
        Like the one you're reading right now.
        You can check some more examples here: <a
                href="https://plugins.jetbrains.com/plugin/16136-grazie-professional/docs">Grazie Professional</a>, <a
                href="https://plugins.jetbrains.com/plugin/8182-rust/docs">Rust</a>, and <a
                href="https://plugins.jetbrains.com/plugin/10081-edutools/docs">Edu Tools</a>.
    </p>
    <p>If you are asking yourself why you should bother about writing documentation for your plugin, here are a few
        tips:
    </p>
    <list>
        <li>Documentation makes your solution discoverable and searchable. When product documentation is online,
            external search engines will bring it to everyone who types the keywords into the search query.
        </li>
        <li>Documentation helps you to stand out and communicate features of a plugin better so that your customers get
            the most out of it.
        </li>
        <li>Documentation makes your product look more professional and reliable and helps build trust in it.</li>
        <li>Documentation is a way to support your current users. If they find answers in documentation, this will
            decrease the support load, which is crucial for a small team. Good documentation also often leads to higher
            rating of a plugin.
        </li>
    </list>
    <chapter id="create-documentation-for-your-plugin" title="Create documentation for your plugin">
        <p>To add documentation for your plugin, install the <a
                href="https://plugins.jetbrains.com/plugin/20158-writerside">Writerside plugin
        </a> for IntelliJ IDEs
            and start writing docs inside your development environment.
        </p>
        <p>You can use not only common Markdown but a variety of semantic markup elements and attributes tailored
            specifically to create documentation, like:
        </p>
        <list>
            <li>tabs</li>
            <li>complex tables</li>
            <li>videos</li>
            <li>collapsible blocks</li>
            <li>smart code snippets</li>
            <li>notes, tips, and warnings.</li>
        </list>
        <p>On top of that, it has a built-in live preview that displays the docs in the way they will appear on the web,
            and a possibility to build docs locally so that you can review them without running a build on a CI/CD.
        </p>
    </chapter>
    <chapter id="publish-documentation" title="Publish documentation">
        <p>We will prepare run configurations on TeamCity, so you can run builds,
            check docs on staging and then promote updates to your documentation pages.
        </p>
        <p>These run configurations include more than 100 automated tests that run during the build and check the
            integrity and quality
            of your content, and a detailed build log to let you know if something goes wrong.
        </p>
        <procedure style="choices">
            <p>So what you need to do to have documentation on the Documentation tab is:</p>
            <step>download the plugin <a href="https://plugins.jetbrains.com/plugin/20158-writerside">here</a>;
            </step>
            <step>create a documentation folder alongside your plugins' code or a separate docs repository;</step>
            <step>write the actual content with the help of templates, live preview, and assistance;</step>
            <step>commit and push the result;</step>
            <step>contact us via email <path>writerside@jetbrains.com</path> and ask to create a run configuration for
                your plugin;
            </step>
            <step>promote a successful build to publish your content to the Documentation tab.</step>
        </procedure>
        <p>For more information, refer to the <a href="https://plugins.jetbrains.com/plugin/20158-writerside/docs">
            Writerside plugin help</a>.
        </p>
    </chapter>
</topic>