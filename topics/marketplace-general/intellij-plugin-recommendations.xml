<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">
<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Plugin Recommendations"
       id="intellij-plugin-recommendations">

    <p>The IntelliJ Platform IDEs may recommend a plugin for installation in one of the following cases:</p>
    <p>
        <list>
            <li>
                If a project contains files of types which are unsupported by the running IDE but are supported by a
                plugin
                available in the plugin repository.
            </li>
            <li>
                If a project was created in different IDE installation which had the plugin installed, and includes
                shared
                settings (modules, facets, artifacts, or run configurations) configured using the plugin.
            </li>
        </list>
    </p>
    <p>IntelliJ Platform IDEs only show plugin suggestions in the appropriate context, so they are meaningful to the
        user.
    </p>
    <warning>
        <p>Features implemented by third-party plugins are subject to review and approval by JetBrains Marketplace, and
            must meet <a href="https://plugins.jetbrains.com/legal/approval-guidelines">the approval criteria</a>. We
            may establish additional criteria on a case-by-case basis and reserve the right to reject the feature
            implementation.
        </p>
    </warning>
    <p>The
        <control>
            <a href="https://github.com/JetBrains/intellij-plugin-verifier/tree/master/intellij-feature-extractor/">
                Feature Extractor
            </a>
        </control>
        tool
        catalogs these types of features for a plugin. It works by statically analyzing the bytecode of a plugin to
        extract
        values passed to the IntelliJ Platform APIs that support extending features in the above list.
    </p>
    <p>However, if values are dynamically evaluated in a plugin, the feature extractor may return incomplete results.
    </p>
    <p>If you cannot find your plugin in <a href="https://plugins.jetbrains.com/feature/">the list of features</a>, you
        can either
        make your code easier for the analysis or ask JetBrains to add manually any missed feature types.
    </p>

    <chapter title="File Type">
        <p>A plugin can
            <a href="https://plugins.jetbrains.com/docs/intellij/registering-file-type.html">support</a>
            specific <control>File Types</control>.
            When there is a file with a specific extension, pattern or name open in an IDE, a hint will be shown to
            users prompting them to install your plugin.
        </p>
        <p>Both variants are supported by the feature extractor:</p>
        <p>
            <list>
                <li>
                    Extend
                    <a href="https://github.com/JetBrains/intellij-community/blob/master/platform/ide-core/src/com/intellij/openapi/fileTypes/FileTypeFactory.java">
                        FileTypeFactory
                    </a>
                    and feed supported file extensions/exact file name matches in <code>
                    createFileTypes(FileTypeConsumer)</code>,
                    values of
                    <code>FileTypeConsumer</code>
                    are analyzed.
                </li>
                <li>
                    Register <code>com.intellij.fileType</code> extension point (available in 2019.2+), all attributes
                    are analyzed.
                </li>
            </list>
        </p>
        <p>A suggestion to install plugins which support the <code>_\*.d_</code> Extension Type:
        </p>
        <img src="feature_extractor_extensions.png" alt="File Extensions Type of Feature" width="928"/>
        <p>Refer to <a href="https://plugins.jetbrains.com/docs/intellij/registering-file-type.html">Registering a File
            Type
        </a> to
            provide this feature in a plugin.
        </p>
        <warning>
            <p>
                Please note, that a file type won't get recommended if it conflicts with a bundled file type.
            </p>
        </warning>
    </chapter>

    <chapter title="Run Configuration Type">
        <p>When you want IDEs to show that your plugin supports <control>Run Configuration Type</control>, you need to
            implement
            <a href="https://github.com/JetBrains/intellij-community/blob/idea/222.3739.54/platform/execution/src/com/intellij/execution/configurations/ConfigurationType.java">
                ConfigurationType
            </a>
            and implement the <code>getId()</code> method. The feature extractor analyzes the value of <code>
                getId()</code>.
        </p>
        <p>A suggestion to install plugins that support the <control>Run D App</control> Configuration Type:
        </p>
        <img src="feature_extractor_configuration.png" alt="Configuration Type of Feature" width="613"/>
        <p>Refer to <a href="https://plugins.jetbrains.com/docs/intellij/run-configurations.html">Run Configurations</a> to
            get more
            information about how to declare this feature in your plugin.
        </p>
    </chapter>

    <chapter title="Facet Type">
        <p>To support a <control>Facet Type</control> feature, you should extend
            <a href="https://github.com/JetBrains/intellij-community/blob/idea/222.3739.54/platform/lang-core/src/com/intellij/facet/FacetType.java">
                FacetType
            </a>
            ,
            and pass <code>stringId</code> to its constructor. The value of the <code>stringId</code> parameter will be
            analyzed by the feature
            extractor.
        </p>
        <p>A notification to install plugins that support the <control>jangaroo</control> Facet Type:
        </p>
        <img src="feature_extractor_facet.png" alt="Facet Type of Feature" width="617"/>
        <p>Refer to <a href="https://plugins.jetbrains.com/docs/intellij/facet.html">Facet</a> for additional
            information.
        </p>
    </chapter>

    <chapter title="Module Type">
        <p>If you want IDEs to show a prompt that your plugin can support creating specific <control>Module
            Types</control>, you should extend
            <a href="https://github.com/JetBrains/intellij-community/blob/idea/222.3739.54/platform/lang-core/src/com/intellij/openapi/module/ModuleType.java">
                ModuleType
            </a>
            and pass the <code>id</code> parameter for your Module Type to its constructor. The feature extractor will
            evaluate
            the values of <code>id</code>.
        </p>

        <p>See <a href="https://plugins.jetbrains.com/docs/intellij/module.html">Module</a> and <a
                href="https://plugins.jetbrains.com/docs/intellij/module-types.html">Supporting Module Types
        </a> for more information about supporting
            Module Types.
        </p>
    </chapter>

    <chapter title="Artifact Type">
        <p>To support specific <control>Artifact Types</control>, extend

            <a href="https://github.com/JetBrains/intellij-community/blob/idea/222.3739.54/java/compiler/openapi/src/com/intellij/packaging/artifacts/ArtifactType.java">
                ArtifactType
            </a>
            ,
            and pass an <code>id</code> parameter to its constructor. The value of the <code>id</code> parameter is
            analyzed by the feature
            extractor.
        </p>

        <p>An example suggestion to enable a plugin which supports a <control>dm.bundle</control> Artifact Type:
        </p>
        <img src="feature_extractor_artifacts.png" alt="Artifact Type of Feature" width="599"/>
    </chapter>

    <chapter title="Dependency Support">
        <warning>
            <p>We do not accept any 3rd party dependency support features temporarily. We have a new kind of <code>dependencySupport</code> executable starting from 2023.2 which is still in testing.</p>
        </warning>
        <p>To support a specific dependency you should declare a tag like
            <code style="block" lang="xml">
         <![CDATA[
                <dependencySupport kind="java"
                                   coordinate="org.junit:org.junit"
                                   displayName="Junit"/>
                ]]>
            </code>
        </p>
        <p>in the
            <path>plugin.xml</path>
            file.
        </p>
    </chapter>

</topic>